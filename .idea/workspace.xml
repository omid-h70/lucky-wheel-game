<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f3bc45f4-365c-4e42-a4e5-b3dbfa571012" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/db/db.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://C:/Program Files/Go/src/testing/testing.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/gorilla/mux@v1.8.0/mux.go" root0="SKIP_INSPECTION" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/redis/go-redis/v9@v9.0.5/command.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/db/mock_db.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/db/redis_db.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cmd/api/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/cmd/api/server.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/go/pkg/mod/github.com/redis/go-redis/v9@v9.0.5/commands.go" root0="SKIP_INSPECTION" />
    <setting file="file://$PROJECT_DIR$/cmd/api/server_test.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2RC7gXD8eADzayn9Q6QBU1lsYtV" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../bank-service" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\workspace\go\lucky-wheel-game" />
      <recent name="D:\workspace\go\lucky-wheel-game\cmd" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\workspace\go\lucky-wheel-game\internal" />
      <recent name="D:\workspace\go\lucky-wheel-game" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build api">
    <configuration name="go build api" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="lucky-wheel-game" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="github.com/omid-h70/lucky-wheel-game" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/api" />
      <method v="2" />
    </configuration>
    <configuration name="Test_test in github.com/omid-h70/lucky-wheel-game/cmd/api" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lucky-wheel-game" />
      <working_directory value="$PROJECT_DIR$/cmd/api" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/omid-h70/lucky-wheel-game/cmd/api" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_test\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_transfer_should_return_fail_when_card_number_len_is_not_valid in github.com/omid-h70/lucky-wheel-game/cmd/api (1)" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lucky-wheel-game" />
      <working_directory value="$PROJECT_DIR$/cmd/api" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/omid-h70/lucky-wheel-game/cmd/api" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_transfer_should_return_fail_when_card_number_len_is_not_valid\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_transfer_should_return_fail_when_card_number_len_is_not_valid in github.com/omid-h70/lucky-wheel-game/cmd/api" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lucky-wheel-game" />
      <working_directory value="$PROJECT_DIR$/cmd/api" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/omid-h70/lucky-wheel-game/cmd/api" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_transfer_should_return_fail_when_card_number_len_is_not_valid\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_transfer_should_return_prize_based_on_multiple_rand_num in github.com/omid-h70/lucky-wheel-game/domain" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lucky-wheel-game" />
      <working_directory value="$PROJECT_DIR$/domain" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/omid-h70/lucky-wheel-game/domain" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_transfer_should_return_prize_based_on_multiple_rand_num\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_transfer_should_return_prize_based_on_rand_num in github.com/omid-h70/lucky-wheel-game/domain" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="lucky-wheel-game" />
      <working_directory value="$PROJECT_DIR$/domain" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/omid-h70/lucky-wheel-game/domain" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_transfer_should_return_prize_based_on_rand_num\E$" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go Build.go build api" />
      <item itemvalue="Go Test.Test_transfer_should_return_fail_when_card_number_len_is_not_valid in github.com/omid-h70/lucky-wheel-game/cmd/api" />
      <item itemvalue="Go Test.Test_transfer_should_return_fail_when_card_number_len_is_not_valid in github.com/omid-h70/lucky-wheel-game/cmd/api (1)" />
      <item itemvalue="Go Test.Test_transfer_should_return_prize_based_on_rand_num in github.com/omid-h70/lucky-wheel-game/domain" />
      <item itemvalue="Go Test.Test_transfer_should_return_prize_based_on_multiple_rand_num in github.com/omid-h70/lucky-wheel-game/domain" />
      <item itemvalue="Go Test.Test_test in github.com/omid-h70/lucky-wheel-game/cmd/api" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.Test_test in github.com/omid-h70/lucky-wheel-game/cmd/api" />
        <item itemvalue="Go Test.Test_transfer_should_return_prize_based_on_multiple_rand_num in github.com/omid-h70/lucky-wheel-game/domain" />
        <item itemvalue="Go Test.Test_transfer_should_return_prize_based_on_rand_num in github.com/omid-h70/lucky-wheel-game/domain" />
        <item itemvalue="Go Test.Test_transfer_should_return_fail_when_card_number_len_is_not_valid in github.com/omid-h70/lucky-wheel-game/cmd/api (1)" />
        <item itemvalue="Go Test.Test_transfer_should_return_fail_when_card_number_len_is_not_valid in github.com/omid-h70/lucky-wheel-game/cmd/api" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://C:/Program Files/Go/src/net/http/server.go</url>
          <line>2602</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>